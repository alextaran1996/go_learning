
# Check source  https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.vm.define "master" do |master|
    master.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 2
      v.name = "master"
    end
    master.vm.box = "bento/ubuntu-16.04"
    master.vm.hostname = "master"  
    master.vm.network "private_network", ip: "192.168.50.10"
    master.vm.provision "shell" do |s|
      s.inline = <<-SHELL
      sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      wget -qO - https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable" 
      sudo apt update -y
      sudo apt install -y docker-ce docker-ce-cli containerd.io
      sudo usermod -aG docker $USER
      sudo usermod -aG docker vagrant
      wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo add-apt-repository "deb https://apt.kubernetes.io/ kubernetes-xenial main" 
      sudo apt update -y
      sudo swapoff -a 
      sudo sed -i 's/.*swap/#&/' /etc/fstab
      sudo apt install -y kubelet kubeadm kubectl
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=$1" > /etc/default/kubelet
      sudo systemctl  daemon-reload
      sudo systemctl restart kubelet
      sudo kubeadm init --apiserver-advertise-address="$1" --apiserver-cert-extra-sans="$1"  --node-name `hostname -s` --pod-network-cidr=192.168.0.0/16
      mkdir -p /home/vagrant/.kube
      sudo cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      sudo chown vagrant: /home/vagrant/.kube/config
      sudo chown vagrant: /etc/kubernetes/admin.conf
      export KUBECONFIG=/etc/kubernetes/admin.conf
      echo 'export KUBECONFIG=/etc/kubernetes/admin.conf' >> /etc/bash.bashrc 
      sudo kubeadm token create --print-join-command > join-command
      kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
      kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
    SHELL
      s.args = "'192.168.50.10'"
    end
  end
  (1..2).each do |i|
    config.vm.define "node-#{i}" do |node|
      node.vm.box = "bento/ubuntu-16.04"
      node.vm.hostname = "node#{i}" 
      node.vm.network "private_network", ip: "192.168.50.#{i + 10}"
      node.vm.provision "shell" do |s|
        s.inline = <<-SHELL
      sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      wget -qO - https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable" 
      sudo apt update -y
      sudo apt install -y docker-ce docker-ce-cli containerd.io
      sudo usermod -aG docker $USER
      sudo usermod -aG docker vagrant
      sudo swapoff -a 
      sudo sed -i 's/.*swap/#&/' /etc/fstab
      wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      sudo add-apt-repository "deb https://apt.kubernetes.io/ kubernetes-xenial main" 
      sudo apt update -y
      sudo apt install -y kubelet kubeadm kubectl
      sudo echo "KUBELET_EXTRA_ARGS=--node-ip=$1" > /etc/default/kubelet
      sudo systemctl  daemon-reload
      sudo systemctl restart kubelet
    SHELL
        s.args = "'192.168.50.#{i+10}'"
      end
      node.vm.provider "virtualbox" do |v|
        v.memory = 2048
        v.cpus = 2
        v.name = "node-#{i}"
      end
    end
  end
end
